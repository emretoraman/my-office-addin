{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack:///./src/taskpane/taskpane.js?"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global console, document, Excel, Office */\n\nOffice.onReady((info) => {\n  if (info.host === Office.HostType.Excel) {\n    // Determine if the user's version of Office supports all the Office.js APIs that are used in the tutorial.\n    if (!Office.context.requirements.isSetSupported('ExcelApi', '1.7')) {\n      console.log('Sorry. The tutorial add-in uses Excel.js APIs that are not available in your version of Office.');\n    }\n\n    // Assign event handlers and other initialization logic.\n    document.getElementById(\"create-table\").onclick = createTable;\n    document.getElementById(\"filter-table\").onclick = filterTable;\n    document.getElementById(\"sort-table\").onclick = sortTable;\n    document.getElementById(\"create-chart\").onclick = createChart;\n    document.getElementById(\"freeze-header\").onclick = freezeHeader;\n    document.getElementById(\"open-dialog\").onclick = openDialog;\n\n    document.getElementById(\"sideload-msg\").style.display = \"none\";\n    document.getElementById(\"app-body\").style.display = \"flex\";\n  }\n});\n\nasync function createTable() {\n  await Excel.run(async (context) => {\n\n    const currentWorksheet = context.workbook.worksheets.getActiveWorksheet();\n    const expensesTable = currentWorksheet.tables.add(\"A1:D1\", true /*hasHeaders*/);\n    expensesTable.name = \"ExpensesTable\";\n\n    expensesTable.getHeaderRowRange().values =\n      [[\"Date\", \"Merchant\", \"Category\", \"Amount\"]];\n\n    expensesTable.rows.add(null /*add at the end*/, [\n      [\"1/1/2017\", \"The Phone Company\", \"Communications\", \"120\"],\n      [\"1/2/2017\", \"Northwind Electric Cars\", \"Transportation\", \"142.33\"],\n      [\"1/5/2017\", \"Best For You Organics Company\", \"Groceries\", \"27.9\"],\n      [\"1/10/2017\", \"Coho Vineyard\", \"Restaurant\", \"33\"],\n      [\"1/11/2017\", \"Bellows College\", \"Education\", \"350.1\"],\n      [\"1/15/2017\", \"Trey Research\", \"Other\", \"135\"],\n      [\"1/15/2017\", \"Best For You Organics Company\", \"Groceries\", \"97.88\"]\n    ]);\n\n    expensesTable.columns.getItemAt(3).getRange().numberFormat = [['\\u20AC#,##0.00']];\n    expensesTable.getRange().format.autofitColumns();\n    expensesTable.getRange().format.autofitRows();\n\n    await context.sync();\n  })\n    .catch(function (error) {\n      console.log(\"Error: \" + error);\n      if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n      }\n    });\n}\n\nasync function filterTable() {\n  await Excel.run(async (context) => {\n\n    const currentWorksheet = context.workbook.worksheets.getActiveWorksheet();\n    const expensesTable = currentWorksheet.tables.getItem('ExpensesTable');\n    const categoryFilter = expensesTable.columns.getItem('Category').filter;\n    categoryFilter.applyValuesFilter(['Education', 'Groceries']);\n\n    await context.sync();\n  })\n    .catch(function (error) {\n      console.log(\"Error: \" + error);\n      if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n      }\n    });\n}\n\nasync function sortTable() {\n  await Excel.run(async (context) => {\n\n    const currentWorksheet = context.workbook.worksheets.getActiveWorksheet();\n    const expensesTable = currentWorksheet.tables.getItem('ExpensesTable');\n    const sortFields = [\n      {\n        key: 1,            // Merchant column\n        ascending: false,\n      }\n    ];\n\n    expensesTable.sort.apply(sortFields);\n\n    await context.sync();\n  })\n    .catch(function (error) {\n      console.log(\"Error: \" + error);\n      if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n      }\n    });\n}\n\nasync function createChart() {\n  await Excel.run(async (context) => {\n\n    const currentWorksheet = context.workbook.worksheets.getActiveWorksheet();\n    const expensesTable = currentWorksheet.tables.getItem('ExpensesTable');\n    const dataRange = expensesTable.getDataBodyRange();\n\n    const chart = currentWorksheet.charts.add('ColumnClustered', dataRange, 'Auto');\n\n    chart.setPosition(\"A15\", \"F30\");\n    chart.title.text = \"Expenses\";\n    chart.legend.position = \"Right\";\n    chart.legend.format.fill.setSolidColor(\"white\");\n    chart.dataLabels.format.font.size = 15;\n    chart.dataLabels.format.font.color = \"black\";\n    chart.series.getItemAt(0).name = 'Value in \\u20AC';\n\n    await context.sync();\n  })\n    .catch(function (error) {\n      console.log(\"Error: \" + error);\n      if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n      }\n    });\n}\n\nasync function freezeHeader() {\n  await Excel.run(async (context) => {\n\n    const currentWorksheet = context.workbook.worksheets.getActiveWorksheet();\n    currentWorksheet.freezePanes.freezeRows(1);\n\n    await context.sync();\n  })\n    .catch(function (error) {\n      console.log(\"Error: \" + error);\n      if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n      }\n    });\n}\n\nlet dialog = null;\n\nfunction openDialog() {\n  Office.context.ui.displayDialogAsync(\n    'https://localhost:3000/popup.html',\n    { height: 45, width: 55 },\n    function (result) {\n      dialog = result.value;\n      dialog.addEventHandler(Office.EventType.DialogMessageReceived, processMessage);\n    }\n  );\n}\n\nfunction processMessage(arg) {\n  document.getElementById(\"user-name\").innerHTML = arg.message;\n  dialog.close();\n}"],"names":["createTable","Excel","run","context","currentWorksheet","workbook","worksheets","getActiveWorksheet","expensesTable","tables","add","name","getHeaderRowRange","values","rows","columns","getItemAt","getRange","numberFormat","format","autofitColumns","autofitRows","sync","catch","error","console","log","OfficeExtension","Error","JSON","stringify","debugInfo","filterTable","getItem","filter","applyValuesFilter","sortTable","sortFields","key","ascending","sort","apply","createChart","dataRange","getDataBodyRange","chart","charts","setPosition","title","text","legend","position","fill","setSolidColor","dataLabels","font","size","color","series","freezeHeader","freezePanes","freezeRows","Office","onReady","info","host","HostType","requirements","isSetSupported","document","getElementById","onclick","openDialog","style","display","dialog","ui","displayDialogAsync","height","width","result","value","addEventHandler","EventType","DialogMessageReceived","processMessage","arg","innerHTML","message","close"],"sourceRoot":""}